from cassandra.cluster import Cluster
from cassandra.auth import PlainTextAuthProvider
import json


class DB:
    def __init__(self):
        self.session = ''
    def connect(self):
        # This secure connect bundle is autogenerated when you download your SCB,
        # if yours is different update the file name below
        cloud_config= {
          'secure_connect_bundle': 'secure-connect-testdb.zip'
        }
        astra_json_api_url = "https://7280a78d-4956-4e9e-b00c-adaa35ba0262-us-east1.apps.astra.datastax.com/api/json"

        # This token JSON file is autogenerated when you download your token,
        # if yours is different update the file name below
        with open("db-token.json") as f:
            secrets = json.load(f)

        CLIENT_ID = secrets["clientId"]
        CLIENT_SECRET = secrets["secret"]

        auth_provider = PlainTextAuthProvider(CLIENT_ID, CLIENT_SECRET)
        cluster = Cluster(cloud=cloud_config, auth_provider=auth_provider)
        self.session = cluster.connect()

        self.session.execute("CREATE KEYSPACE IF NOT EXISTS OCR WITH replication = {'class':'SimpleStrategy', 'replication_factor':3}")
        self.session.set_keyspace('OCR')

        row = self.session.execute("select release_version from system.local").one()
        if row:
          print(row[0])
        else:
          print("An error occurred.")
    def store(self,data):
        self.session.execute

    # rows = session.execute("select * from aliens")
    # for row in rows:
    #   print(row)
    # else:
    #   print("An error occurred.")